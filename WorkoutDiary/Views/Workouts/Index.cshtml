@model IEnumerable<WorkoutDiary.Models.Workout>
@using Microsoft.AspNet.Identity
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">

<link rel="stylesheet" href="~/Content/cal-heatmap.css" />
<script type="text/javascript" src="~/Scripts/cal-heatmap.min.js"></script>


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div style="margin-left:auto; margin-top:40px; text-align:center">
    @*<h1 class="align-middle">@User.Identity.GetUserName()</h1>
        <h2>
        </h2>*@
</div>
<div class="container">
    <div class="row align-items-center">
        <div class="col-md-6">
            <table id="workouts" class="table table-bordered table-hover table-striped">
                <thead>
                    <tr>
                        <th></th>
                        <th>Workout</th>
                        <th>Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
            <p>
                @Html.ActionLink("Create New", "Create", "Workouts", null, new { @class = "btn btn-primary" })
            </p>
        </div>

        <div class="well bs-component; col-md-6" style="height: 470px; margin-top: 39px;">
            <div id="pieChartContainer" style="margin-top: 10px"></div>
        </div>

        <div id="cal-heatmap" style="float:left"></div>

        <!--<div id="statisticsCarousel" class="carousel slide" style="height:100%; background-image:none" data-ride="carousel">-->
            <!-- Indicators -->
            <!--<ol class="carousel-indicators">
                <li data-target="#statisticsCarousel" data-slide-to="0" class="active"></li>
                <li data-target="#statisticsCarousel" data-slide-to="1"></li>
                <li data-target="#statisticsCarousel" data-slide-to="2"></li>
            </ol>-->

            <!-- Wrapper for slides -->
            <!--<div class="carousel-inner">
                <div class="item active">
                    <div class="col-md-6">
                        <div id="chartContainer1" class="chart" style="width:100%; height:300px;"></div>
                    </div>
                </div>

                <div class="item">
                    <div class="col-md-6">
                        <div id="chartContainer2" class="chart" style="width:100%; height:300px;"></div>
                    </div>
                </div>

                <div class="item">
                    <div class="col-md-6">
                        <div id="chartContainer3" class="chart" style="width:100%; height:300px;"></div>
                    </div>
                </div>
            </div>-->

            <!-- Left and right controls -->
            <!--<a class="left carousel-control" href="#statisticsCarousel" data-slide="prev">
                <span class="glyphicon glyphicon-chevron-left"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="right carousel-control" href="#statisticsCarousel" data-slide="next">
                <span class="glyphicon glyphicon-chevron-right"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>-->


    </div>
</div>



@section scripts{
    <script>
        var editor;
        $(document).ready(function () {

            var workoutColumn;
            if ($(window).width() < 500) {
                workoutColumn = "40%";
            }
            else {
                workoutColumn = "65%";
            }

            $("#workouts").DataTable({
                ajax: {
                    url: "/api/workouts",
                    dataSrc: "",
                },
                order: [2, 'desc'],
                columns: [
                    {

                        orderable: false,
                        data: "WorkoutType.IconString",
                        render: function (data, type, workout) {
                            return "<i class='" + data + "'></i>"
                        },
                    },
                    {
                        data: "WorkoutType.Name",
                        width: workoutColumn

                    },
                    {
                        data: "DateInString",
                    },
                    {
                        data: "Id",
                        className: "center",
                        render: function (data, type, workout) {
                            return "<a href='/workouts/edit/" + data + "'><i class='far fa-edit'></i></a> <button class='btn-link js-delete' data-workout-id=" + data + '><i class="far fa-trash-alt"></i></button>';
                        },
                        orderable: false
                    }
                ]
            });

            $("#workouts").on("click", ".js-delete", function () {
                var button = $(this);

                if (confirm("Are your sure do you want to delete this workout permanently?")) {
                    $.ajax({
                        url: "/api/workouts/" + button.attr("data-workout-id"),
                        method: "DELETE",
                        success: function () {
                            button.parents("tr").remove();
                            location.reload();
                            toastr.success("Successfully deleted!");
                        }
                    });
                }

                //bootbox.confirm("ArUsure??????", function (result) {
                //    if (result) {
                //        $.ajax({
                //            url: "/api/workouts/" + button.attr("data-workout-id"),
                //            method: "DELETE",
                //            success: function () {
                //                table.row(button.parents("tr")).remove().draw()
                //            }
                //        });
                //    }
                //});

                //bootbox.confirm("Are sure do you want to delete this workout permanently?", function (result) {
                //    if (result) {
                //        $.ajax({
                //            url: "/api/workouts/" + button.attr("data-workout-id"),
                //            method: "DELETE",
                //            success: function () {
                //                table.row(button.parents("tr")).remove().draw()
                //            }
                //        });
                //    }
                //});
            });

            ////////// HEATMAP /////////////////////////

            var cal = new CalHeatMap();
            var dataArr = [];
            var dateRange = 0;
            if ($(window).width() < 600) {
                dateRange = 4;
            }
            else {
                dateRange = 12;
            }

            var runningData = [];
            var swimmingData = [];

            var chartsHeight = 300;
            var chartsWidth = 700;

            $.get("/api/workouts", function (data) {

                $.each(data, function (a, b) {
                    var arrayData = {};

                    var wNumber = b.WorkoutType.WorkoutTypeCounter;
                    var wDate = b.Timestamp;

                    arrayData.date = wDate;
                    arrayData.value = wNumber;
                    dataArr.push(arrayData);

                    if (b.WorkoutType.Name == "Running") {
                        runningData.push({
                            x: new Date(b.DateInString), y: b.Distance
                        });
                    }

                    if (b.WorkoutType.Name == "Swimming") {
                        swimmingData.push({
                            x: new Date(b.DateInString), y: b.Distance
                        });
                    }
                });

                var chart = new CanvasJS.Chart("pieChartContainer", {
                    title: {
                        text: "All workouts",
                        fontFamily: "Source Sans Pro",
                        margin: 10,
                        fontWeight: "normal"
                    },
                    addColorSet: "greenShades",
                    animationEnabled: true,
                    animationDuration: 300,
                    backgroundColor: "transparent",
                    theme: "light2",
                    data: [
                        {
                            type: "pie",
                            indexLabelFontFamily: "Source Sans Pro",
                            indexLabelFontSize: 15,
                            indexLabel: " {label}",
                            startAngle: -20,
                            toolTipContent: "{label}: {y}",
                            dataPoints: @Html.Raw(ViewBag.DataPoints)
                        }
                    ]
                });
                chart.render();

                @*var chart1 = new CanvasJS.Chart("chartContainer1", {
                    width: 500,
                    title: {
                        text: "Running Data"
                    },
                    axisX: {
                        title: "Date"
                    },
                    axisY: {
                        includeZero: true,
                        title: "Distance (km)"
                    },
                    data: [{
                        type: "splineArea",
                        color: "rgba(62,172,54,.7)",
                        dataPoints: runningData
                    }]
                });
                chart1.render();

                var chart2 = new CanvasJS.Chart("chartContainer2", {
                    height: chartsHeight,
                    title: {
                        text: "Swimming Data"
                    },
                    axisX: {
                        title: "Date"
                    },
                    axisY: {
                        includeZero: true,
                        title: "Distance (km)"
                    },
                    data: [{
                        type: "splineArea",
                        color: "rgba(54,167,172,.7)",
                        dataPoints: swimmingData
                    }]
                });
                chart2.render();

                var chart3 = new CanvasJS.Chart("chartContainer3", {
                    height: chartsHeight,
                    title: {
                        text: "All workouts",
                        fontFamily: "Source Sans Pro",
                        margin: 50,
                        fontWeight: "normal"
                    },
                    addColorSet: "greenShades",
                    animationEnabled: true,
                    animationDuration: 300,
                    backgroundColor: "transparent",
                    theme: "light2",
                    data: [
                        {
                            type: "pie",
                            indexLabelFontFamily: "Source Sans Pro",
                            indexLabelFontSize: 15,
                            indexLabel: " {label}",
                            startAngle: -20,
                            toolTipContent: "{label}: {y}",
                            dataPoints: @Html.Raw(ViewBag.DataPoints)
                        }
                    ]
                });
                chart3.render();
                    ;*@

                cal.init({
                    itemSelector: "#cal-heatmap",
                    data: dataArr,
                    afterLoadData: parser,
                    domain: "month",
                    subDomain: "day",
                    cellSize: 15,
                    subDomainTextFormat: "%d",
                    range: dateRange,
                    domainGutter: 10,
                    displayLegend: false,
                    legend: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
                    tooltip: false,
                    subDomainTitleFormat: "empty"
                });
            });

            var parser = function (data) {
                var stats = {};
                for (var d in data) {
                    stats[data[d].date] = data[d].value;
                }
                return stats;
            };


            /////////////////////////////////

            //CanvasJS.addColorSet("greenShades",
            //[
            //    "#2F4F4F",
            //    "#008080",
            //    "#2E8B57",
            //    "#3CB371",
            //    "#90EE90"
            //]);



        @*var chart = new CanvasJS.Chart("chartContainer3", {
                title: {
                    fontFamily: "Source Sans Pro",
                    margin: 50,
                    fontWeight: "normal"
                },
                addColorSet: "greenShades",
                animationEnabled: true,
                animationDuration: 300,
                backgroundColor: "transparent",
                theme: "light2",
                data: [
                    {
                        type: "column",
                        indexLabelFontFamily: "Source Sans Pro",
                        indexLabelFontSize: 15,
                        indexLabel: " {label}",
                        startAngle: -20,
                        toolTipContent: "{label}: {y}",
                        dataPoints: @Html.Raw(ViewBag.DataPoints)
                    }
                ]
            });
        chart.render();*@
        //};


            $('.carousel').carousel({
                interval: 5000
            })
        });


    </script>
}
